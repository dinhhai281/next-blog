{"version":3,"sources":["webpack:///./node_modules/fp-ts/lib/Array.js","webpack:///./node_modules/core-js/modules/es.array.reduce-right.js","webpack:///./node_modules/fp-ts/lib/Ordering.js","webpack:///./node_modules/fp-ts/lib/function.js","webpack:///./node_modules/fp-ts/lib/Ord.js","webpack:///./node_modules/fp-ts/lib/pipeable.js","webpack:///./node_modules/fp-ts/lib/Option.js","webpack:///./node_modules/fp-ts/lib/ReadonlyArray.js"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","rotate","intersperse","prependToAll","unzip","zip","zipWith","sort","lefts","rights","reverse","modifyAt","deleteAt","updateAt","insertAt","copy","findLastIndex","findLastMap","findLast","findFirstMap","findFirst","findIndex","dropLeftWhile","dropRight","dropLeft","spanLeft","takeLeftWhile","takeRight","takeLeft","init","tail","last","head","snoc","cons","lookup","isOutOfBound","isNonEmpty","isEmpty","scanRight","scanLeft","foldRight","foldLeft","flatten","replicate","range","makeBy","getOrd","getEq","getMonoid","getShow","Applicative","FunctorWithIndex","Functor","URI","zero","unfold","wilt","wither","traverseWithIndex","sequence","traverse","reduceRightWithIndex","reduceRight","reduceWithIndex","reduce","foldMapWithIndex","foldMap","duplicate","extend","filterWithIndex","filterMapWithIndex","alt","altW","partitionMapWithIndex","partitionMap","partitionWithIndex","partition","filterMap","filter","separate","compact","mapWithIndex","chainFirst","chainWithIndex","chain","apSecond","apFirst","ap","map","of","difference","intersection","union","comprehension","chunksOf","splitAt","chop","sortBy","uniq","elem","apS","bind","bindTo","Do","some","every","empty","unsafeDeleteAt","unsafeUpdateAt","unsafeInsertAt","array","Witherable","TraversableWithIndex","Traversable","FoldableWithIndex","Foldable","FilterableWithIndex","Filterable","Compactable","Extend","Alternative","Alt","Unfoldable","Monad","RA","predicate","toArray","input","f","g","map_","ap_","chain_","mapWithIndex_","filter_","filterMap_","partition_","partitionMap_","filterWithIndex_","filterMapWithIndex_","partitionWithIndex_","partitionMapWithIndex_","reduce_","foldMap_","reduceRight_","traverse_","alt_","reduceWithIndex_","foldMapWithIndex_","reduceRightWithIndex_","traverseWithIndex_","extend_","wither_","wilt_","$","$reduceRight","right","arrayMethodIsStrict","arrayMethodUsesToLength","CHROME_VERSION","IS_NODE","STRICT_METHOD","USES_TO_LENGTH","1","target","proto","forced","callbackfn","arguments","length","invert","monoidOrdering","semigroupOrdering","eqOrdering","sign","n","equals","x","y","concat","O","identity","a","constant","absurd","_","Error","bindTo_","bind_","hole","pipe","untupled","tupled","decrement","increment","tuple","flow","flip","constVoid","constUndefined","constNull","constFalse","constTrue","not","unsafeCoerce","b","ab","bc","cd","de","ef","fg","gh","hi","ij","apply","t","_i","jk","kl","lm","mn","no","op","pq","qr","rs","st","name","_a","assign","ord","Contravariant","ordDate","contramap","getDualOrd","getTupleOrd","getSemigroup","fromCompare","between","clamp","max","min","geq","leq","gt","lt","ordBoolean","ordNumber","ordString","Ordering_1","function_1","compare","strictEqual","optimizedCompare","minO","maxO","low","lessThanO","greaterThanO","ords","len","i","r","fa","date","valueOf","pipeable","I","isFunctor","isContravariant","isFunctorWithIndex","isApply","fab","fb","isChain","ma","mma","bimap","isBifunctor","mapLeft","isExtend","wa","isFoldable","M","foldMapM","isFoldableWithIndex","isAlt","that","isCompactable","isFilterable","isFilterableWithIndex","predicateWithIndex","promap","isProfunctor","compose","isSemigroupoid","throwError","isMonadThrow","fromOption","onNone","_tag","fromEither","left","fromPredicate","onFalse","filterOrElse","getApplySemigroup","chainNullableK","mapNullable","fromNullableK","getOrElse","getOrElseW","toUndefined","toNullable","fold","getRight","getLeft","tryCatch","fromNullable","none","isNone","isSome","sequenceArray","traverseArray","traverseArrayWithIndex","getRefinement","exists","option","MonadThrow","getLastMonoid","getFirstMonoid","getApplyMonoid","e","onSome","F","traverseF","ta","witherF","wiltF","defaultSeparate","E","S","show","getOption","arr","push","fromArray","readonlyArray","Ord_1","as","l","ras","Array","join","lenx","leny","end","xs","ys","aLen","bLen","Math","ordering","start","rLen","j","onEmpty","onCons","slice","spanIndexUncurry","rest","fc","bs","elemE_1","element","xs_1","abs","elemS","cs","c","go","scope","elemE","unionE_1","intersectionE_1","differenceE_1","traverseWithIndexF","outLen","temp","out","l_1","fa_1","optionB","foldMapWithIndexM","fas","fbs","splice","ret","bb","mt","b_1"],"mappings":"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","file":"2abe3825f260235db30b1e1bb48cf14d3f555dca-6ce8416d73e708ce20b3.js","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.array.reduce.js\");\n\nrequire(\"core-js/modules/es.array.reduce-right.js\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rotate = exports.intersperse = exports.prependToAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.snoc = exports.cons = exports.lookup = exports.isOutOfBound = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.foldRight = exports.foldLeft = exports.flatten = exports.replicate = exports.range = exports.makeBy = exports.getOrd = exports.getEq = exports.getMonoid = exports.getShow = void 0;\nexports.Applicative = exports.FunctorWithIndex = exports.Functor = exports.URI = exports.zero = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.filterMapWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filterMap = exports.filter = exports.separate = exports.compact = exports.mapWithIndex = exports.chainFirst = exports.chainWithIndex = exports.chain = exports.apSecond = exports.apFirst = exports.ap = exports.map = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = void 0;\nexports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.empty = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.array = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.Monad = void 0;\n\nvar RA = __importStar(require(\"./ReadonlyArray\")); // -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n\n/* tslint:disable:readonly-array */\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\n\nexports.getShow = RA.getShow;\n/**\n * Returns a `Monoid` for `Array<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\n\nexports.getMonoid = RA.getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\n\nexports.getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\n\nexports.getOrd = RA.getOrd; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexports.makeBy = RA.makeBy;\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexports.range = RA.range;\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexports.replicate = RA.replicate;\n/**\n * Removes one level of nesting.\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.flatten = RA.flatten;\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.foldLeft = RA.foldLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.foldRight = RA.foldRight;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.scanLeft = RA.scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.scanRight = RA.scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.0.0\n */\n\nexports.isEmpty = RA.isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @category guards\n * @since 2.0.0\n */\n\nexports.isNonEmpty = RA.isNonEmpty;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.0.0\n */\n\nexports.isOutOfBound = RA.isOutOfBound; // TODO: remove non-curried overloading in v3\n\n/**\n * This function provides a safe way to read a value at a particular index from an array\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\n\nexports.lookup = RA.lookup; // TODO: remove non-curried overloading in v3\n\n/**\n * Attaches an element to the front of an array, creating a new non empty array\n *\n * @example\n * import { cons } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], cons(0)), [0, 1, 2, 3])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexports.cons = RA.cons; // TODO: curry in v3\n\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexports.snoc = RA.snoc;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.tail = RA.tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.init = RA.init;\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.takeLeft = RA.takeLeft;\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.takeRight = RA.takeRight;\n\nfunction takeLeftWhile(predicate) {\n  return RA.takeLeftWhile(predicate);\n}\n\nexports.takeLeftWhile = takeLeftWhile;\n\nfunction spanLeft(predicate) {\n  return RA.spanLeft(predicate);\n}\n\nexports.spanLeft = spanLeft;\n/* tslint:enable:readonly-keyword */\n\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.dropLeft = RA.dropLeft;\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.dropRight = RA.dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.dropLeftWhile = RA.dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\n\nexports.findIndex = RA.findIndex;\n\nfunction findFirst(predicate) {\n  return RA.findFirst(predicate);\n}\n\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.findFirstMap = RA.findFirstMap;\n\nfunction findLast(predicate) {\n  return RA.findLast(predicate);\n}\n\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.0.0\n */\n\nexports.findLastIndex = RA.findLastIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nexports.copy = RA.toArray;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\n\nexports.insertAt = RA.insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\n\nexports.updateAt = RA.updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\n\nexports.deleteAt = RA.deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\n\nexports.modifyAt = RA.modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.reverse = RA.reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.rights = RA.rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.lefts = RA.lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.sort = RA.sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.zipWith = RA.zipWith; // TODO: remove non-curried overloading in v3\n\n/**\n * Takes two arrays and returns an array of corresponding pairs. If one input array is short, excess elements of the\n * longer array are discarded\n *\n * @example\n * import { zip } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], zip(['a', 'b', 'c', 'd'])), [[1, 'a'], [2, 'b'], [3, 'c']])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.zip = RA.zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\n\nexports.unzip = RA.unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nexports.prependToAll = RA.prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nexports.intersperse = RA.intersperse;\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.rotate = RA.rotate; // TODO: remove non-curried overloading in v3\n\n/**\n * Test if a value is a member of an array. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an array of type `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(eqNumber)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(eqNumber)(0)), false)\n *\n * @since 2.0.0\n */\n\nexports.elem = RA.elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.uniq = RA.uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.sortBy = RA.sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/Array'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.chop = RA.chop;\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.0.0\n */\n\nexports.splitAt = RA.splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.0.0\n */\n\nexports.chunksOf = RA.chunksOf;\n\nfunction comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function g() {\n      return true;\n    };\n  }\n\n  return RA.comprehension(input, f, g);\n}\n\nexports.comprehension = comprehension; // TODO: remove non-curried overloading in v3\n\n/**\n * Creates an array of unique values, in order, from all given arrays using a `Eq` for equality comparisons\n *\n * @example\n * import { union } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2], union(eqNumber)([2, 3])), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.union = RA.union; // TODO: remove non-curried overloading in v3\n\n/**\n * Creates an array of unique values that are included in all given arrays using a `Eq` for equality\n * comparisons. The order and references of result values are determined by the first array.\n *\n * @example\n * import { intersection } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2], intersection(eqNumber)([2, 3])), [2])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.intersection = RA.intersection; // TODO: remove non-curried overloading in v3\n\n/**\n * Creates an array of array values not included in the other given array using a `Eq` for equality\n * comparisons. The order and references of result values are determined by the first array.\n *\n * @example\n * import { difference } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2], difference(eqNumber)([2, 3])), [1])\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.difference = RA.difference;\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.0.0\n */\n\nexports.of = RA.of; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar map_ = RA.Monad.map;\nvar ap_ = RA.Monad.ap;\nvar chain_ = RA.Monad.chain;\nvar mapWithIndex_ = RA.FunctorWithIndex.mapWithIndex;\nvar filter_ = RA.Filterable.filter;\nvar filterMap_ = RA.Filterable.filterMap;\nvar partition_ = RA.Filterable.partition;\nvar partitionMap_ = RA.Filterable.partitionMap;\nvar filterWithIndex_ = RA.FilterableWithIndex.filterWithIndex;\nvar filterMapWithIndex_ = RA.FilterableWithIndex.filterMapWithIndex;\nvar partitionWithIndex_ = RA.FilterableWithIndex.partitionWithIndex;\nvar partitionMapWithIndex_ = RA.FilterableWithIndex.partitionMapWithIndex;\nvar reduce_ = RA.Foldable.reduce;\nvar foldMap_ = RA.Foldable.foldMap;\nvar reduceRight_ = RA.Foldable.reduceRight;\nvar traverse_ = RA.Traversable.traverse;\nvar alt_ = RA.Alternative.alt;\nvar reduceWithIndex_ = RA.FoldableWithIndex.reduceWithIndex;\nvar foldMapWithIndex_ = RA.FoldableWithIndex.foldMapWithIndex;\nvar reduceRightWithIndex_ = RA.FoldableWithIndex.reduceRightWithIndex;\nvar traverseWithIndex_ = RA.TraversableWithIndex.traverseWithIndex;\nvar extend_ = RA.Extend.extend;\nvar wither_ = RA.Witherable.wither;\nvar wilt_ = RA.Witherable.wilt; // -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\n\nexports.map = RA.map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\n\nexports.ap = RA.ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.apFirst = RA.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.apSecond = RA.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\n\nexports.chain = RA.chain;\n/**\n * @since 2.7.0\n */\n\nexports.chainWithIndex = RA.chainWithIndex;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.chainFirst = RA.chainFirst;\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\n\nexports.mapWithIndex = RA.mapWithIndex;\n/**\n * @category Compactable\n * @since 2.0.0\n */\n\nexports.compact = RA.compact;\n/**\n * @category Compactable\n * @since 2.0.0\n */\n\nexports.separate = RA.separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nexports.filter = RA.filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nexports.filterMap = RA.filterMap;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nexports.partition = RA.partition;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nexports.partitionWithIndex = RA.partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nexports.partitionMap = RA.partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nexports.partitionMapWithIndex = RA.partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nexports.altW = RA.altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\n\nexports.alt = RA.alt;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nexports.filterMapWithIndex = RA.filterMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\n\nexports.filterWithIndex = RA.filterWithIndex;\n/**\n * @category Extend\n * @since 2.0.0\n */\n\nexports.extend = RA.extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.duplicate = RA.duplicate;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.foldMap = RA.foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nexports.reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\n\nexports.reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\n\nexports.traverse = RA.traverse;\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\n\nexports.sequence = RA.sequence;\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nexports.traverseWithIndex = RA.traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nexports.wither = RA.wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nexports.wilt = RA.wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\n\nexports.unfold = RA.unfold;\n/**\n * @category Alternative\n * @since 2.7.0\n */\n\nexports.zero = RA.Alternative.zero; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.URI = 'Array';\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FunctorWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Unfoldable = {\n  URI: exports.URI,\n  unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: map_,\n  alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alternative = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  alt: alt_,\n  zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: map_,\n  extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Filterable = {\n  URI: exports.URI,\n  map: map_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FilterableWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FoldableWithIndex = {\n  URI: exports.URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: map_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.TraversableWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Witherable = {\n  URI: exports.URI,\n  map: map_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  wither: wither_,\n  wilt: wilt_\n}; // TODO: remove in v3\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.array = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  chain: chain_,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  mapWithIndex: mapWithIndex_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_,\n  alt: alt_,\n  zero: exports.zero,\n  unfold: exports.unfold,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverseWithIndex: traverseWithIndex_,\n  extend: extend_,\n  wither: wither_,\n  wilt: wilt_\n}; // -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nexports.unsafeInsertAt = RA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nexports.unsafeUpdateAt = RA.unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\n\nexports.unsafeDeleteAt = RA.unsafeDeleteAt; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * An empty array\n *\n * @since 2.0.0\n */\n\nexports.empty = [];\n/**\n * @since 2.9.0\n */\n\nexports.every = RA.every;\n/**\n * @since 2.9.0\n */\n\nexports.some = RA.some; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of({});\n/**\n * @since 2.8.0\n */\n\nexports.bindTo = RA.bindTo;\n/**\n * @since 2.8.0\n */\n\nexports.bind = RA.bind; // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nexports.apS = RA.apS;","'use strict';\nvar $ = require('../internals/export');\nvar $reduceRight = require('../internals/array-reduce').right;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\nvar CHROME_VERSION = require('../internals/engine-v8-version');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduceRight');\n// For preventing possible almost infinite loop in non-standard implementations, test the forward version of the method\nvar USES_TO_LENGTH = arrayMethodUsesToLength('reduce', { 1: 0 });\n// Chrome 80-82 has a critical bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\n\n// `Array.prototype.reduceRight` method\n// https://tc39.es/ecma262/#sec-array.prototype.reduceright\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH || CHROME_BUG }, {\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.invert = exports.monoidOrdering = exports.semigroupOrdering = exports.eqOrdering = exports.sign = void 0;\n/**\n * @since 2.0.0\n */\n\nfunction sign(n) {\n  return n <= -1 ? -1 : n >= 1 ? 1 : 0;\n}\n\nexports.sign = sign;\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.eqOrdering = {\n  equals: function equals(x, y) {\n    return x === y;\n  }\n};\n/**\n * Use `monoidOrdering` instead\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nexports.semigroupOrdering = {\n  concat: function concat(x, y) {\n    return x !== 0 ? x : y;\n  }\n};\n/**\n * @category instances\n * @since 2.4.0\n */\n\nexports.monoidOrdering = {\n  // tslint:disable-next-line: deprecation\n  concat: exports.semigroupOrdering.concat,\n  empty: 0\n};\n/**\n * @since 2.0.0\n */\n\nfunction invert(O) {\n  switch (O) {\n    case -1:\n      return 1;\n\n    case 1:\n      return -1;\n\n    default:\n      return 0;\n  }\n}\n\nexports.invert = invert;","\"use strict\";\n/**\n * @since 2.0.0\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bindTo_ = exports.bind_ = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.not = exports.unsafeCoerce = exports.identity = void 0;\n/**\n * @since 2.0.0\n */\n\nfunction identity(a) {\n  return a;\n}\n\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\n\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\n\nfunction not(predicate) {\n  return function (a) {\n    return !predicate(a);\n  };\n}\n\nexports.not = not;\n/**\n * @since 2.0.0\n */\n\nfunction constant(a) {\n  return function () {\n    return a;\n  };\n}\n\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\n\nexports.constTrue = /*#__PURE__*/constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\n\nexports.constFalse = /*#__PURE__*/constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\n\nexports.constNull = /*#__PURE__*/constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\n\nexports.constUndefined = /*#__PURE__*/constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\n\nexports.constVoid = exports.constUndefined; // TODO: remove in v3\n\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\n\nfunction flip(f) {\n  return function (b, a) {\n    return f(a, b);\n  };\n}\n\nexports.flip = flip;\n\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n  switch (arguments.length) {\n    case 1:\n      return ab;\n\n    case 2:\n      return function () {\n        return bc(ab.apply(this, arguments));\n      };\n\n    case 3:\n      return function () {\n        return cd(bc(ab.apply(this, arguments)));\n      };\n\n    case 4:\n      return function () {\n        return de(cd(bc(ab.apply(this, arguments))));\n      };\n\n    case 5:\n      return function () {\n        return ef(de(cd(bc(ab.apply(this, arguments)))));\n      };\n\n    case 6:\n      return function () {\n        return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n      };\n\n    case 7:\n      return function () {\n        return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n      };\n\n    case 8:\n      return function () {\n        return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n      };\n\n    case 9:\n      return function () {\n        return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n      };\n  }\n\n  return;\n}\n\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\n\nfunction tuple() {\n  var t = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    t[_i] = arguments[_i];\n  }\n\n  return t;\n}\n\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\n\nfunction increment(n) {\n  return n + 1;\n}\n\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\n\nfunction decrement(n) {\n  return n - 1;\n}\n\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\n\nfunction absurd(_) {\n  throw new Error('Called `absurd` function which should be uncallable');\n}\n\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\n\nfunction tupled(f) {\n  return function (a) {\n    return f.apply(void 0, a);\n  };\n}\n\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\n\nfunction untupled(f) {\n  return function () {\n    var a = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n\n    return f(a);\n  };\n}\n\nexports.untupled = untupled;\n\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi, ij, jk, kl, lm, mn, no, op, pq, qr, rs, st) {\n  switch (arguments.length) {\n    case 1:\n      return a;\n\n    case 2:\n      return ab(a);\n\n    case 3:\n      return bc(ab(a));\n\n    case 4:\n      return cd(bc(ab(a)));\n\n    case 5:\n      return de(cd(bc(ab(a))));\n\n    case 6:\n      return ef(de(cd(bc(ab(a)))));\n\n    case 7:\n      return fg(ef(de(cd(bc(ab(a))))));\n\n    case 8:\n      return gh(fg(ef(de(cd(bc(ab(a)))))));\n\n    case 9:\n      return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n\n    case 10:\n      return ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))));\n\n    case 11:\n      return jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))));\n\n    case 12:\n      return kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))));\n\n    case 13:\n      return lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))));\n\n    case 14:\n      return mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))));\n\n    case 15:\n      return no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))));\n\n    case 16:\n      return op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))));\n\n    case 17:\n      return pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))));\n\n    case 18:\n      return qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))));\n\n    case 19:\n      return rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))))));\n\n    case 20:\n      return st(rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))))));\n  }\n\n  return;\n}\n\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\n\nexports.hole = absurd;\n/**\n * @internal\n */\n\nvar bind_ = function bind_(a, name, b) {\n  var _a;\n\n  return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n};\n\nexports.bind_ = bind_;\n/**\n * @internal\n */\n\nvar bindTo_ = function bindTo_(name) {\n  return function (b) {\n    var _a;\n\n    return _a = {}, _a[name] = b, _a;\n  };\n};\n\nexports.bindTo_ = bindTo_;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ord = exports.Contravariant = exports.ordDate = exports.URI = exports.contramap = exports.getDualOrd = exports.getTupleOrd = exports.getMonoid = exports.getSemigroup = exports.fromCompare = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.ordBoolean = exports.ordNumber = exports.ordString = void 0;\n\nvar Ordering_1 = require(\"./Ordering\");\n\nvar function_1 = require(\"./function\"); // default compare for primitive types\n\n\nfunction compare(x, y) {\n  return x < y ? -1 : x > y ? 1 : 0;\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n/**\n * @category instances\n * @since 2.0.0\n */\n\n\nexports.ordString = {\n  equals: strictEqual,\n  compare: compare\n};\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.ordNumber = {\n  equals: strictEqual,\n  compare: compare\n};\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.ordBoolean = {\n  equals: strictEqual,\n  compare: compare\n}; // TODO: curry in v3\n\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\n\nfunction lt(O) {\n  return function (x, y) {\n    return O.compare(x, y) === -1;\n  };\n}\n\nexports.lt = lt; // TODO: curry in v3\n\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\n\nfunction gt(O) {\n  return function (x, y) {\n    return O.compare(x, y) === 1;\n  };\n}\n\nexports.gt = gt; // TODO: curry in v3\n\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\n\nfunction leq(O) {\n  return function (x, y) {\n    return O.compare(x, y) !== 1;\n  };\n}\n\nexports.leq = leq; // TODO: curry in v3\n\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\n\nfunction geq(O) {\n  return function (x, y) {\n    return O.compare(x, y) !== -1;\n  };\n}\n\nexports.geq = geq; // TODO: curry in v3\n\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\n\nfunction min(O) {\n  return function (x, y) {\n    return O.compare(x, y) === 1 ? y : x;\n  };\n}\n\nexports.min = min; // TODO: curry in v3\n\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\n\nfunction max(O) {\n  return function (x, y) {\n    return O.compare(x, y) === -1 ? y : x;\n  };\n}\n\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\n\nfunction clamp(O) {\n  var minO = min(O);\n  var maxO = max(O);\n  return function (low, hi) {\n    return function (x) {\n      return maxO(minO(x, hi), low);\n    };\n  };\n}\n\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\n\nfunction between(O) {\n  var lessThanO = lt(O);\n  var greaterThanO = gt(O);\n  return function (low, hi) {\n    return function (x) {\n      return lessThanO(x, low) || greaterThanO(x, hi) ? false : true;\n    };\n  };\n}\n\nexports.between = between;\n/**\n * @category constructors\n * @since 2.0.0\n */\n\nfunction fromCompare(compare) {\n  var optimizedCompare = function optimizedCompare(x, y) {\n    return x === y ? 0 : compare(x, y);\n  };\n\n  return {\n    equals: function equals(x, y) {\n      return optimizedCompare(x, y) === 0;\n    },\n    compare: optimizedCompare\n  };\n}\n\nexports.fromCompare = fromCompare;\n/**\n * Use `getMonoid` instead\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\n\nfunction getSemigroup() {\n  return {\n    concat: function concat(x, y) {\n      return fromCompare(function (a, b) {\n        return Ordering_1.monoidOrdering.concat(x.compare(a, b), y.compare(a, b));\n      });\n    }\n  };\n}\n\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, getDualOrd, getMonoid, ordBoolean, ordNumber, ordString } from 'fp-ts/Ord'\n * import { pipe } from 'fp-ts/function'\n * import { fold } from 'fp-ts/Monoid'\n *\n * interface User {\n *   id: number\n *   name: string\n *   age: number\n *   rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   ordString,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   ordNumber,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   ordBoolean,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = fold(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = fold(M)([getDualOrd(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\n\nfunction getMonoid() {\n  return {\n    // tslint:disable-next-line: deprecation\n    concat: getSemigroup().concat,\n    empty: fromCompare(function () {\n      return 0;\n    })\n  };\n}\n\nexports.getMonoid = getMonoid;\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple\n *\n * @example\n * import { getTupleOrd, ordString, ordNumber, ordBoolean } from 'fp-ts/Ord'\n *\n * const O = getTupleOrd(ordString, ordNumber, ordBoolean)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getTupleOrd() {\n  var ords = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    ords[_i] = arguments[_i];\n  }\n\n  var len = ords.length;\n  return fromCompare(function (x, y) {\n    var i = 0;\n\n    for (; i < len - 1; i++) {\n      var r = ords[i].compare(x[i], y[i]);\n\n      if (r !== 0) {\n        return r;\n      }\n    }\n\n    return ords[i].compare(x[i], y[i]);\n  });\n}\n\nexports.getTupleOrd = getTupleOrd;\n/**\n * @category combinators\n * @since 2.0.0\n */\n\nfunction getDualOrd(O) {\n  return fromCompare(function (x, y) {\n    return O.compare(y, x);\n  });\n}\n\nexports.getDualOrd = getDualOrd; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\n/* istanbul ignore next */\n\nvar contramap_ = function contramap_(fa, f) {\n  return function_1.pipe(fa, exports.contramap(f));\n}; // -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n\n/**\n * @category Contravariant\n * @since 2.0.0\n */\n\n\nvar contramap = function contramap(f) {\n  return function (fa) {\n    return fromCompare(function (x, y) {\n      return fa.compare(f(x), f(y));\n    });\n  };\n};\n\nexports.contramap = contramap; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.ordDate = /*#__PURE__*/function_1.pipe(exports.ordNumber, /*#__PURE__*/exports.contramap(function (date) {\n  return date.valueOf();\n}));\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Contravariant = {\n  URI: exports.URI,\n  contramap: contramap_\n}; // TODO: remove in v3\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.ord = exports.Contravariant;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.reduce.js\");\n\nrequire(\"core-js/modules/es.array.reduce-right.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pipeable = exports.pipe = void 0;\n\nvar function_1 = require(\"./function\"); // TODO: remove module in v3\n\n/**\n * Use [`pipe`](https://gcanti.github.io/fp-ts/modules/function.ts.html#flow) from `function` module instead.\n *\n * @since 2.0.0\n */\n\n\nexports.pipe = function_1.pipe;\n\nvar isFunctor = function isFunctor(I) {\n  return typeof I.map === 'function';\n};\n\nvar isContravariant = function isContravariant(I) {\n  return typeof I.contramap === 'function';\n};\n\nvar isFunctorWithIndex = function isFunctorWithIndex(I) {\n  return typeof I.mapWithIndex === 'function';\n};\n\nvar isApply = function isApply(I) {\n  return typeof I.ap === 'function';\n};\n\nvar isChain = function isChain(I) {\n  return typeof I.chain === 'function';\n};\n\nvar isBifunctor = function isBifunctor(I) {\n  return typeof I.bimap === 'function';\n};\n\nvar isExtend = function isExtend(I) {\n  return typeof I.extend === 'function';\n};\n\nvar isFoldable = function isFoldable(I) {\n  return typeof I.reduce === 'function';\n};\n\nvar isFoldableWithIndex = function isFoldableWithIndex(I) {\n  return typeof I.reduceWithIndex === 'function';\n};\n\nvar isAlt = function isAlt(I) {\n  return typeof I.alt === 'function';\n};\n\nvar isCompactable = function isCompactable(I) {\n  return typeof I.compact === 'function';\n};\n\nvar isFilterable = function isFilterable(I) {\n  return typeof I.filter === 'function';\n};\n\nvar isFilterableWithIndex = function isFilterableWithIndex(I) {\n  return typeof I.filterWithIndex === 'function';\n};\n\nvar isProfunctor = function isProfunctor(I) {\n  return typeof I.promap === 'function';\n};\n\nvar isSemigroupoid = function isSemigroupoid(I) {\n  return typeof I.compose === 'function';\n};\n\nvar isMonadThrow = function isMonadThrow(I) {\n  return typeof I.throwError === 'function';\n};\n\nfunction pipeable(I) {\n  var r = {};\n\n  if (isFunctor(I)) {\n    var map = function map(f) {\n      return function (fa) {\n        return I.map(fa, f);\n      };\n    };\n\n    r.map = map;\n  }\n\n  if (isContravariant(I)) {\n    var contramap = function contramap(f) {\n      return function (fa) {\n        return I.contramap(fa, f);\n      };\n    };\n\n    r.contramap = contramap;\n  }\n\n  if (isFunctorWithIndex(I)) {\n    var mapWithIndex = function mapWithIndex(f) {\n      return function (fa) {\n        return I.mapWithIndex(fa, f);\n      };\n    };\n\n    r.mapWithIndex = mapWithIndex;\n  }\n\n  if (isApply(I)) {\n    var ap = function ap(fa) {\n      return function (fab) {\n        return I.ap(fab, fa);\n      };\n    };\n\n    var apFirst = function apFirst(fb) {\n      return function (fa) {\n        return I.ap(I.map(fa, function (a) {\n          return function () {\n            return a;\n          };\n        }), fb);\n      };\n    };\n\n    r.ap = ap;\n    r.apFirst = apFirst;\n\n    r.apSecond = function (fb) {\n      return function (fa) {\n        return I.ap(I.map(fa, function () {\n          return function (b) {\n            return b;\n          };\n        }), fb);\n      };\n    };\n  }\n\n  if (isChain(I)) {\n    var chain = function chain(f) {\n      return function (ma) {\n        return I.chain(ma, f);\n      };\n    };\n\n    var chainFirst = function chainFirst(f) {\n      return function (ma) {\n        return I.chain(ma, function (a) {\n          return I.map(f(a), function () {\n            return a;\n          });\n        });\n      };\n    };\n\n    var flatten = function flatten(mma) {\n      return I.chain(mma, function_1.identity);\n    };\n\n    r.chain = chain;\n    r.chainFirst = chainFirst;\n    r.flatten = flatten;\n  }\n\n  if (isBifunctor(I)) {\n    var bimap = function bimap(f, g) {\n      return function (fa) {\n        return I.bimap(fa, f, g);\n      };\n    };\n\n    var mapLeft = function mapLeft(f) {\n      return function (fa) {\n        return I.mapLeft(fa, f);\n      };\n    };\n\n    r.bimap = bimap;\n    r.mapLeft = mapLeft;\n  }\n\n  if (isExtend(I)) {\n    var extend = function extend(f) {\n      return function (wa) {\n        return I.extend(wa, f);\n      };\n    };\n\n    var duplicate = function duplicate(wa) {\n      return I.extend(wa, function_1.identity);\n    };\n\n    r.extend = extend;\n    r.duplicate = duplicate;\n  }\n\n  if (isFoldable(I)) {\n    var reduce = function reduce(b, f) {\n      return function (fa) {\n        return I.reduce(fa, b, f);\n      };\n    };\n\n    var foldMap = function foldMap(M) {\n      var foldMapM = I.foldMap(M);\n      return function (f) {\n        return function (fa) {\n          return foldMapM(fa, f);\n        };\n      };\n    };\n\n    var reduceRight = function reduceRight(b, f) {\n      return function (fa) {\n        return I.reduceRight(fa, b, f);\n      };\n    };\n\n    r.reduce = reduce;\n    r.foldMap = foldMap;\n    r.reduceRight = reduceRight;\n  }\n\n  if (isFoldableWithIndex(I)) {\n    var reduceWithIndex = function reduceWithIndex(b, f) {\n      return function (fa) {\n        return I.reduceWithIndex(fa, b, f);\n      };\n    };\n\n    var foldMapWithIndex = function foldMapWithIndex(M) {\n      var foldMapM = I.foldMapWithIndex(M);\n      return function (f) {\n        return function (fa) {\n          return foldMapM(fa, f);\n        };\n      };\n    };\n\n    var reduceRightWithIndex = function reduceRightWithIndex(b, f) {\n      return function (fa) {\n        return I.reduceRightWithIndex(fa, b, f);\n      };\n    };\n\n    r.reduceWithIndex = reduceWithIndex;\n    r.foldMapWithIndex = foldMapWithIndex;\n    r.reduceRightWithIndex = reduceRightWithIndex;\n  }\n\n  if (isAlt(I)) {\n    var alt = function alt(that) {\n      return function (fa) {\n        return I.alt(fa, that);\n      };\n    };\n\n    r.alt = alt;\n  }\n\n  if (isCompactable(I)) {\n    r.compact = I.compact;\n    r.separate = I.separate;\n  }\n\n  if (isFilterable(I)) {\n    var filter = function filter(predicate) {\n      return function (fa) {\n        return I.filter(fa, predicate);\n      };\n    };\n\n    var filterMap = function filterMap(f) {\n      return function (fa) {\n        return I.filterMap(fa, f);\n      };\n    };\n\n    var partition = function partition(predicate) {\n      return function (fa) {\n        return I.partition(fa, predicate);\n      };\n    };\n\n    var partitionMap = function partitionMap(f) {\n      return function (fa) {\n        return I.partitionMap(fa, f);\n      };\n    };\n\n    r.filter = filter;\n    r.filterMap = filterMap;\n    r.partition = partition;\n    r.partitionMap = partitionMap;\n  }\n\n  if (isFilterableWithIndex(I)) {\n    var filterWithIndex = function filterWithIndex(predicateWithIndex) {\n      return function (fa) {\n        return I.filterWithIndex(fa, predicateWithIndex);\n      };\n    };\n\n    var filterMapWithIndex = function filterMapWithIndex(f) {\n      return function (fa) {\n        return I.filterMapWithIndex(fa, f);\n      };\n    };\n\n    var partitionWithIndex = function partitionWithIndex(predicateWithIndex) {\n      return function (fa) {\n        return I.partitionWithIndex(fa, predicateWithIndex);\n      };\n    };\n\n    var partitionMapWithIndex = function partitionMapWithIndex(f) {\n      return function (fa) {\n        return I.partitionMapWithIndex(fa, f);\n      };\n    };\n\n    r.filterWithIndex = filterWithIndex;\n    r.filterMapWithIndex = filterMapWithIndex;\n    r.partitionWithIndex = partitionWithIndex;\n    r.partitionMapWithIndex = partitionMapWithIndex;\n  }\n\n  if (isProfunctor(I)) {\n    var promap = function promap(f, g) {\n      return function (fa) {\n        return I.promap(fa, f, g);\n      };\n    };\n\n    r.promap = promap;\n  }\n\n  if (isSemigroupoid(I)) {\n    var compose = function compose(that) {\n      return function (fa) {\n        return I.compose(fa, that);\n      };\n    };\n\n    r.compose = compose;\n  }\n\n  if (isMonadThrow(I)) {\n    var fromOption = function fromOption(onNone) {\n      return function (ma) {\n        return ma._tag === 'None' ? I.throwError(onNone()) : I.of(ma.value);\n      };\n    };\n\n    var fromEither = function fromEither(ma) {\n      return ma._tag === 'Left' ? I.throwError(ma.left) : I.of(ma.right);\n    };\n\n    var fromPredicate = function fromPredicate(predicate, onFalse) {\n      return function (a) {\n        return predicate(a) ? I.of(a) : I.throwError(onFalse(a));\n      };\n    };\n\n    var filterOrElse = function filterOrElse(predicate, onFalse) {\n      return function (ma) {\n        return I.chain(ma, function (a) {\n          return predicate(a) ? I.of(a) : I.throwError(onFalse(a));\n        });\n      };\n    };\n\n    r.fromOption = fromOption;\n    r.fromEither = fromEither;\n    r.fromPredicate = fromPredicate;\n    r.filterOrElse = filterOrElse;\n  }\n\n  return r;\n}\n\nexports.pipeable = pipeable;","\"use strict\";\n\nrequire(\"core-js/modules/es.array.reduce.js\");\n\nrequire(\"core-js/modules/es.array.reduce-right.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getApplySemigroup = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.wilt = exports.wither = exports.sequence = exports.traverse = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.separate = exports.compact = exports.reduceRight = exports.foldMap = exports.reduce = exports.duplicate = exports.extend = exports.throwError = exports.zero = exports.alt = exports.altW = exports.flatten = exports.chainFirst = exports.chain = exports.of = exports.apSecond = exports.apFirst = exports.ap = exports.map = exports.chainNullableK = exports.mapNullable = exports.fromNullableK = exports.getOrElse = exports.getOrElseW = exports.toUndefined = exports.toNullable = exports.fold = exports.fromEither = exports.getRight = exports.getLeft = exports.tryCatch = exports.fromPredicate = exports.fromNullable = exports.some = exports.none = exports.isNone = exports.isSome = void 0;\nexports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.getRefinement = exports.exists = exports.elem = exports.option = exports.MonadThrow = exports.Witherable = exports.Traversable = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Foldable = exports.Monad = exports.Applicative = exports.Functor = exports.getMonoid = exports.getLastMonoid = exports.getFirstMonoid = exports.getApplyMonoid = void 0;\n\nvar function_1 = require(\"./function\"); // -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category guards\n * @since 2.0.0\n */\n\n\nvar isSome = function isSome(fa) {\n  return fa._tag === 'Some';\n};\n\nexports.isSome = isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category guards\n * @since 2.0.0\n */\n\nvar isNone = function isNone(fa) {\n  return fa._tag === 'None';\n};\n\nexports.isNone = isNone; // -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexports.none = {\n  _tag: 'None'\n};\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\n\nvar some = function some(a) {\n  return {\n    _tag: 'Some',\n    value: a\n  };\n};\n\nexports.some = some;\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category constructors\n * @since 2.0.0\n */\n\nfunction fromNullable(a) {\n  return a == null ? exports.none : exports.some(a);\n}\n\nexports.fromNullable = fromNullable;\n\nfunction fromPredicate(predicate) {\n  return function (a) {\n    return predicate(a) ? exports.some(a) : exports.none;\n  };\n}\n\nexports.fromPredicate = fromPredicate;\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category constructors\n * @since 2.0.0\n */\n\nfunction tryCatch(f) {\n  try {\n    return exports.some(f());\n  } catch (e) {\n    return exports.none;\n  }\n}\n\nexports.tryCatch = tryCatch;\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\n\nfunction getLeft(ma) {\n  return ma._tag === 'Right' ? exports.none : exports.some(ma.left);\n}\n\nexports.getLeft = getLeft;\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\n\nfunction getRight(ma) {\n  return ma._tag === 'Left' ? exports.none : exports.some(ma.right);\n}\n\nexports.getRight = getRight;\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getRight)\n *\n * Derivable from `MonadThrow`.\n *\n * @category constructors\n * @since 2.0.0\n */\n\nexports.fromEither = getRight; // -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, fold } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     fold(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     fold(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\n\nfunction fold(onNone, onSome) {\n  return function (ma) {\n    return exports.isNone(ma) ? onNone() : onSome(ma.value);\n  };\n}\n\nexports.fold = fold;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\n\nfunction toNullable(ma) {\n  return exports.isNone(ma) ? null : ma.value;\n}\n\nexports.toNullable = toNullable;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\n\nfunction toUndefined(ma) {\n  return exports.isNone(ma) ? undefined : ma.value;\n}\n\nexports.toUndefined = toUndefined;\n/**\n * Less strict version of [`getOrElse`](#getOrElse).\n *\n * @category destructors\n * @since 2.6.0\n */\n\nvar getOrElseW = function getOrElseW(onNone) {\n  return function (ma) {\n    return exports.isNone(ma) ? onNone() : ma.value;\n  };\n};\n\nexports.getOrElseW = getOrElseW;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\n\nexports.getOrElse = exports.getOrElseW; // -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category combinators\n * @since 2.9.0\n */\n\nfunction fromNullableK(f) {\n  return function () {\n    var a = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      a[_i] = arguments[_i];\n    }\n\n    return fromNullable(f.apply(void 0, a));\n  };\n}\n\nexports.fromNullableK = fromNullableK;\n/**\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\n\nexports.mapNullable = chainNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   company?: {\n *     address?: {\n *       street?: {\n *         name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category combinators\n * @since 2.9.0\n */\n\nfunction chainNullableK(f) {\n  return function (ma) {\n    return exports.isNone(ma) ? exports.none : fromNullable(f(ma.value));\n  };\n}\n\nexports.chainNullableK = chainNullableK; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar map_ = function map_(fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n\nvar ap_ = function ap_(fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n\nvar chain_ = function chain_(ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n\nvar reduce_ = function reduce_(fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n\nvar foldMap_ = function foldMap_(M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n\nvar reduceRight_ = function reduceRight_(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n\nvar traverse_ = function traverse_(F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar alt_ = function alt_(fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n\nvar filter_ = function filter_(fa, predicate) {\n  return function_1.pipe(fa, exports.filter(predicate));\n};\n/* istanbul ignore next */\n\n\nvar filterMap_ = function filterMap_(fa, f) {\n  return function_1.pipe(fa, exports.filterMap(f));\n};\n/* istanbul ignore next */\n\n\nvar extend_ = function extend_(wa, f) {\n  return function_1.pipe(wa, exports.extend(f));\n};\n/* istanbul ignore next */\n\n\nvar partition_ = function partition_(fa, predicate) {\n  return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\n\n\nvar partitionMap_ = function partitionMap_(fa, f) {\n  return function_1.pipe(fa, exports.partitionMap(f));\n};\n/* istanbul ignore next */\n\n\nvar wither_ = function wither_(F) {\n  var witherF = exports.wither(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, witherF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar wilt_ = function wilt_(F) {\n  var wiltF = exports.wilt(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, wiltF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\n\n\nvar map = function map(f) {\n  return function (fa) {\n    return exports.isNone(fa) ? exports.none : exports.some(f(fa.value));\n  };\n};\n\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\n\nvar ap = function ap(fa) {\n  return function (fab) {\n    return exports.isNone(fab) ? exports.none : exports.isNone(fa) ? exports.none : exports.some(fab.value(fa.value));\n  };\n};\n\nexports.ap = ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar apFirst = function apFirst(fb) {\n  return function_1.flow(exports.map(function (a) {\n    return function () {\n      return a;\n    };\n  }), exports.ap(fb));\n};\n\nexports.apFirst = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar apSecond = function apSecond(fb) {\n  return function_1.flow(exports.map(function () {\n    return function (b) {\n      return b;\n    };\n  }), exports.ap(fb));\n};\n\nexports.apSecond = apSecond;\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.7.0\n */\n\nexports.of = exports.some;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\n\nvar chain = function chain(f) {\n  return function (ma) {\n    return exports.isNone(ma) ? exports.none : f(ma.value);\n  };\n};\n\nexports.chain = chain;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nvar chainFirst = function chainFirst(f) {\n  return exports.chain(function (a) {\n    return function_1.pipe(f(a), exports.map(function () {\n      return a;\n    }));\n  });\n};\n\nexports.chainFirst = chainFirst;\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.flatten = /*#__PURE__*/exports.chain(function_1.identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\nvar altW = function altW(that) {\n  return function (fa) {\n    return exports.isNone(fa) ? that() : fa;\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category Alt\n * @since 2.0.0\n */\n\nexports.alt = exports.altW;\n/**\n * @category Alternative\n * @since 2.7.0\n */\n\nvar zero = function zero() {\n  return exports.none;\n};\n\nexports.zero = zero;\n/**\n * @category MonadThrow\n * @since 2.7.0\n */\n\nvar throwError = function throwError() {\n  return exports.none;\n};\n\nexports.throwError = throwError;\n/**\n * @category Extend\n * @since 2.0.0\n */\n\nvar extend = function extend(f) {\n  return function (wa) {\n    return exports.isNone(wa) ? exports.none : exports.some(f(wa));\n  };\n};\n\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nvar reduce = function reduce(b, f) {\n  return function (fa) {\n    return exports.isNone(fa) ? b : f(b, fa.value);\n  };\n};\n\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nvar foldMap = function foldMap(M) {\n  return function (f) {\n    return function (fa) {\n      return exports.isNone(fa) ? M.empty : f(fa.value);\n    };\n  };\n};\n\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\n\nvar reduceRight = function reduceRight(b, f) {\n  return function (fa) {\n    return exports.isNone(fa) ? b : f(fa.value, b);\n  };\n};\n\nexports.reduceRight = reduceRight;\n/**\n * @category Compactable\n * @since 2.0.0\n */\n\nexports.compact = exports.flatten;\nvar defaultSeparate = {\n  left: exports.none,\n  right: exports.none\n};\n/**\n * @category Compactable\n * @since 2.0.0\n */\n\nvar separate = function separate(ma) {\n  var o = function_1.pipe(ma, exports.map(function (e) {\n    return {\n      left: getLeft(e),\n      right: getRight(e)\n    };\n  }));\n  return exports.isNone(o) ? defaultSeparate : o.value;\n};\n\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar filter = function filter(predicate) {\n  return function (fa) {\n    return exports.isNone(fa) ? exports.none : predicate(fa.value) ? fa : exports.none;\n  };\n};\n\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar filterMap = function filterMap(f) {\n  return function (fa) {\n    return exports.isNone(fa) ? exports.none : f(fa.value);\n  };\n};\n\nexports.filterMap = filterMap;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar partition = function partition(predicate) {\n  return function (fa) {\n    return {\n      left: filter_(fa, function (a) {\n        return !predicate(a);\n      }),\n      right: filter_(fa, predicate)\n    };\n  };\n};\n\nexports.partition = partition;\n/**\n * @category Filterable\n * @since 2.0.0\n */\n\nvar partitionMap = function partitionMap(f) {\n  return function_1.flow(exports.map(f), exports.separate);\n};\n\nexports.partitionMap = partitionMap;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar traverse = function traverse(F) {\n  return function (f) {\n    return function (ta) {\n      return exports.isNone(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some);\n    };\n  };\n};\n\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar sequence = function sequence(F) {\n  return function (ta) {\n    return exports.isNone(ta) ? F.of(exports.none) : F.map(ta.value, exports.some);\n  };\n};\n\nexports.sequence = sequence;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wither = function wither(F) {\n  return function (f) {\n    return function (fa) {\n      return exports.isNone(fa) ? F.of(exports.none) : f(fa.value);\n    };\n  };\n};\n\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wilt = function wilt(F) {\n  return function (f) {\n    return function (fa) {\n      return exports.isNone(fa) ? F.of({\n        left: exports.none,\n        right: exports.none\n      }) : F.map(f(fa.value), function (e) {\n        return {\n          left: getLeft(e),\n          right: getRight(e)\n        };\n      });\n    };\n  };\n};\n\nexports.wilt = wilt; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\n\nfunction getShow(S) {\n  return {\n    show: function show(ma) {\n      return exports.isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\";\n    }\n  };\n}\n\nexports.getShow = getShow;\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * const E = getEq(eqNumber)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getEq(E) {\n  return {\n    equals: function equals(x, y) {\n      return x === y || (exports.isNone(x) ? exports.isNone(y) : exports.isNone(y) ? false : E.equals(x.value, y.value));\n    }\n  };\n}\n\nexports.getEq = getEq;\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordNumber)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getOrd(O) {\n  return {\n    equals: getEq(O).equals,\n    compare: function compare(x, y) {\n      return x === y ? 0 : exports.isSome(x) ? exports.isSome(y) ? O.compare(x.value, y.value) : 1 : -1;\n    }\n  };\n}\n\nexports.getOrd = getOrd;\n/**\n * `Apply` semigroup\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | none               |\n * | none    | some(a) | none               |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getApplySemigroup, some, none } from 'fp-ts/Option'\n * import { semigroupSum } from 'fp-ts/Semigroup'\n *\n * const S = getApplySemigroup(semigroupSum)\n * assert.deepStrictEqual(S.concat(none, none), none)\n * assert.deepStrictEqual(S.concat(some(1), none), none)\n * assert.deepStrictEqual(S.concat(none, some(1)), none)\n * assert.deepStrictEqual(S.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getApplySemigroup(S) {\n  return {\n    concat: function concat(x, y) {\n      return exports.isSome(x) && exports.isSome(y) ? exports.some(S.concat(x.value, y.value)) : exports.none;\n    }\n  };\n}\n\nexports.getApplySemigroup = getApplySemigroup;\n/**\n * @category instances\n * @since 2.0.0\n */\n\nfunction getApplyMonoid(M) {\n  return {\n    concat: getApplySemigroup(M).concat,\n    empty: exports.some(M.empty)\n  };\n}\n\nexports.getApplyMonoid = getApplyMonoid;\n/**\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getFirstMonoid() {\n  return {\n    concat: function concat(x, y) {\n      return exports.isNone(x) ? y : x;\n    },\n    empty: exports.none\n  };\n}\n\nexports.getFirstMonoid = getFirstMonoid;\n/**\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getLastMonoid() {\n  return {\n    concat: function concat(x, y) {\n      return exports.isNone(y) ? x : y;\n    },\n    empty: exports.none\n  };\n}\n\nexports.getLastMonoid = getLastMonoid;\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(a) | some(a)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { semigroupSum } from 'fp-ts/Semigroup'\n *\n * const M = getMonoid(semigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\n\nfunction getMonoid(S) {\n  return {\n    concat: function concat(x, y) {\n      return exports.isNone(x) ? y : exports.isNone(y) ? x : exports.some(S.concat(x.value, y.value));\n    },\n    empty: exports.none\n  };\n}\n\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: map_,\n  alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alternative = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  alt: alt_,\n  zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: map_,\n  extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Filterable = {\n  URI: exports.URI,\n  map: map_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: map_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Witherable = {\n  URI: exports.URI,\n  map: map_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  wither: wither_,\n  wilt: wilt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.MonadThrow = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  chain: chain_,\n  throwError: exports.throwError\n}; // TODO: remove in v3\n\n/**\n * @category instances\n * @since 2.0.0\n */\n\nexports.option = {\n  URI: exports.URI,\n  map: map_,\n  of: exports.of,\n  ap: ap_,\n  chain: chain_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  zero: exports.zero,\n  alt: alt_,\n  extend: extend_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  wither: wither_,\n  wilt: wilt_,\n  throwError: exports.throwError\n}; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * Returns `true` if `ma` contains `a`\n *\n * @example\n * import { some, none, elem } from 'fp-ts/Option'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.strictEqual(elem(eqNumber)(1, some(1)), true)\n * assert.strictEqual(elem(eqNumber)(2, some(1)), false)\n * assert.strictEqual(elem(eqNumber)(1, none), false)\n *\n * @since 2.0.0\n */\n\nfunction elem(E) {\n  return function (a, ma) {\n    return exports.isNone(ma) ? false : E.equals(a, ma.value);\n  };\n}\n\nexports.elem = elem;\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\n\nfunction exists(predicate) {\n  return function (ma) {\n    return exports.isNone(ma) ? false : predicate(ma.value);\n  };\n}\n\nexports.exists = exists;\n/**\n * Returns a `Refinement` (i.e. a custom type guard) from a `Option` returning function.\n * This function ensures that a custom type guard definition is type-safe.\n *\n * ```ts\n * import { some, none, getRefinement } from 'fp-ts/Option'\n *\n * type A = { type: 'A' }\n * type B = { type: 'B' }\n * type C = A | B\n *\n * const isA = (c: C): c is A => c.type === 'B' // <= typo but typescript doesn't complain\n * const isA = getRefinement<C, A>(c => (c.type === 'B' ? some(c) : none)) // static error: Type '\"B\"' is not assignable to type '\"A\"'\n * ```\n *\n * @since 2.0.0\n */\n\nfunction getRefinement(getOption) {\n  return function (a) {\n    return exports.isSome(getOption(a));\n  };\n}\n\nexports.getRefinement = getRefinement; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of({});\n/**\n * @since 2.8.0\n */\n\nvar bindTo = function bindTo(name) {\n  return exports.map(function_1.bindTo_(name));\n};\n\nexports.bindTo = bindTo;\n/**\n * @since 2.8.0\n */\n\nvar bind = function bind(name, f) {\n  return exports.chain(function (a) {\n    return function_1.pipe(f(a), exports.map(function (b) {\n      return function_1.bind_(a, name, b);\n    }));\n  });\n};\n\nexports.bind = bind; // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nvar apS = function apS(name, fb) {\n  return function_1.flow(exports.map(function (a) {\n    return function (b) {\n      return function_1.bind_(a, name, b);\n    };\n  }), exports.ap(fb));\n};\n\nexports.apS = apS; // -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n\n/**\n *\n * @since 2.9.0\n */\n\nvar traverseArrayWithIndex = function traverseArrayWithIndex(f) {\n  return function (arr) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n\n    for (var i = 0; i < arr.length; i++) {\n      var b = f(i, arr[i]);\n\n      if (exports.isNone(b)) {\n        return exports.none;\n      }\n\n      result.push(b.value);\n    }\n\n    return exports.some(result);\n  };\n};\n\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Runs an action for every element in array and accumulates the results in option\n *\n * this function has the same behavior of `A.sequence(O.option)` but it's optimized and performs better\n *\n * @example\n *\n * import * as A from 'fp-ts/Array'\n * import { traverseArray, some, fromPredicate, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * const arr = A.range(0, 10)\n * assert.deepStrictEqual(pipe(arr, traverseArray(some)), some(arr))\n * assert.deepStrictEqual(pipe(arr, traverseArray(fromPredicate((x) => x > 5))), none)\n *\n * @since 2.9.0\n */\n\nvar traverseArray = function traverseArray(f) {\n  return exports.traverseArrayWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.traverseArray = traverseArray;\n/**\n * get an array of option and convert it to option of array\n *\n * this function has the same behavior of `A.sequence(O.option)` but it's optimized and performs better\n *\n * @example\n *\n * import * as A from 'fp-ts/Array'\n * import { sequenceArray, some, none, fromPredicate } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * const arr = A.range(0, 10)\n * assert.deepStrictEqual(pipe(arr, A.map(some), sequenceArray), some(arr))\n * assert.deepStrictEqual(pipe(arr, A.map(fromPredicate(x => x > 8)), sequenceArray), none)\n *\n * @since 2.9.0\n */\n\nexports.sequenceArray = /*#__PURE__*/exports.traverseArray(function_1.identity);","\"use strict\";\n\nrequire(\"core-js/modules/es.array.reduce.js\");\n\nrequire(\"core-js/modules/es.array.reduce-right.js\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.intersperse = exports.prependToAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.snoc = exports.cons = exports.lookup = exports.isOutOfBound = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.foldRight = exports.foldLeft = exports.flatten = exports.replicate = exports.range = exports.makeBy = exports.getOrd = exports.getEq = exports.getMonoid = exports.getShow = exports.toArray = exports.fromArray = void 0;\nexports.FunctorWithIndex = exports.Functor = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.chainFirst = exports.chainWithIndex = exports.chain = exports.apSecond = exports.apFirst = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = void 0;\nexports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.empty = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.readonlyArray = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.Monad = exports.Applicative = void 0;\n\nvar function_1 = require(\"./function\");\n\nvar O = __importStar(require(\"./Option\"));\n\nvar Ord_1 = require(\"./Ord\"); // -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\n\n\nfunction fromArray(as) {\n  var l = as.length;\n\n  if (l === 0) {\n    return exports.empty;\n  }\n\n  var ras = Array(l);\n\n  for (var i = 0; i < l; i++) {\n    ras[i] = as[i];\n  }\n\n  return ras;\n}\n\nexports.fromArray = fromArray;\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\n\nfunction toArray(ras) {\n  var l = ras.length;\n  var as = Array(l);\n\n  for (var i = 0; i < l; i++) {\n    as[i] = ras[i];\n  }\n\n  return as;\n}\n\nexports.toArray = toArray;\n/**\n * @category instances\n * @since 2.5.0\n */\n\nfunction getShow(S) {\n  return {\n    show: function show(as) {\n      return \"[\" + as.map(S.show).join(', ') + \"]\";\n    }\n  };\n}\n\nexports.getShow = getShow;\n\nvar concat = function concat(x, y) {\n  var lenx = x.length;\n\n  if (lenx === 0) {\n    return y;\n  }\n\n  var leny = y.length;\n\n  if (leny === 0) {\n    return x;\n  }\n\n  var r = Array(lenx + leny);\n\n  for (var i = 0; i < lenx; i++) {\n    r[i] = x[i];\n  }\n\n  for (var i = 0; i < leny; i++) {\n    r[i + lenx] = y[i];\n  }\n\n  return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\n\n\nfunction getMonoid() {\n  return {\n    concat: concat,\n    empty: exports.empty\n  };\n}\n\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\n\nfunction getEq(E) {\n  return {\n    equals: function equals(xs, ys) {\n      return xs === ys || xs.length === ys.length && xs.every(function (x, i) {\n        return E.equals(x, ys[i]);\n      });\n    }\n  };\n}\n\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\n\nfunction getOrd(O) {\n  return Ord_1.fromCompare(function (a, b) {\n    var aLen = a.length;\n    var bLen = b.length;\n    var len = Math.min(aLen, bLen);\n\n    for (var i = 0; i < len; i++) {\n      var ordering = O.compare(a[i], b[i]);\n\n      if (ordering !== 0) {\n        return ordering;\n      }\n    }\n\n    return Ord_1.ordNumber.compare(aLen, bLen);\n  });\n}\n\nexports.getOrd = getOrd;\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nfunction makeBy(n, f) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n\n  for (var i = 0; i < n; i++) {\n    r.push(f(i));\n  }\n\n  return r;\n}\n\nexports.makeBy = makeBy;\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nfunction range(start, end) {\n  return makeBy(end - start + 1, function (i) {\n    return start + i;\n  });\n}\n\nexports.range = range;\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nfunction replicate(n, a) {\n  return makeBy(n, function () {\n    return a;\n  });\n}\n\nexports.replicate = replicate;\n/**\n * Removes one level of nesting\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction flatten(mma) {\n  var rLen = 0;\n  var len = mma.length;\n\n  for (var i = 0; i < len; i++) {\n    rLen += mma[i].length;\n  }\n\n  var r = Array(rLen);\n  var start = 0;\n\n  for (var i = 0; i < len; i++) {\n    var arr = mma[i];\n    var l = arr.length;\n\n    for (var j = 0; j < l; j++) {\n      r[j + start] = arr[j];\n    }\n\n    start += l;\n  }\n\n  return r;\n}\n\nexports.flatten = flatten;\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\n\nfunction foldLeft(onEmpty, onCons) {\n  return function (as) {\n    return isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1));\n  };\n}\n\nexports.foldLeft = foldLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\n\nfunction foldRight(onEmpty, onCons) {\n  return function (as) {\n    return isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1]);\n  };\n}\n\nexports.foldRight = foldRight;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction scanLeft(b, f) {\n  return function (as) {\n    var l = as.length;\n    var r = new Array(l + 1);\n    r[0] = b;\n\n    for (var i = 0; i < l; i++) {\n      r[i + 1] = f(r[i], as[i]);\n    }\n\n    return r;\n  };\n}\n\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction scanRight(b, f) {\n  return function (as) {\n    var l = as.length;\n    var r = new Array(l + 1);\n    r[l] = b;\n\n    for (var i = l - 1; i >= 0; i--) {\n      r[i] = f(as[i], r[i + 1]);\n    }\n\n    return r;\n  };\n}\n\nexports.scanRight = scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\n\nfunction isEmpty(as) {\n  return as.length === 0;\n}\n\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\n\nfunction isNonEmpty(as) {\n  return as.length > 0;\n}\n\nexports.isNonEmpty = isNonEmpty;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\n\nfunction isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n}\n\nexports.isOutOfBound = isOutOfBound;\n\nfunction lookup(i, as) {\n  return as === undefined ? function (as) {\n    return lookup(i, as);\n  } : isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\n\nexports.lookup = lookup;\n\nfunction cons(head, tail) {\n  if (tail === undefined) {\n    return function (tail) {\n      return cons(head, tail);\n    };\n  }\n\n  var len = tail.length;\n  var r = Array(len + 1);\n\n  for (var i = 0; i < len; i++) {\n    r[i + 1] = tail[i];\n  }\n\n  r[0] = head;\n  return r;\n}\n\nexports.cons = cons; // TODO: curry and make data-last in v3\n\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\n\nfunction snoc(init, end) {\n  var len = init.length;\n  var r = Array(len + 1);\n\n  for (var i = 0; i < len; i++) {\n    r[i] = init[i];\n  }\n\n  r[len] = end;\n  return r;\n}\n\nexports.snoc = snoc;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\n\nfunction head(as) {\n  return isEmpty(as) ? O.none : O.some(as[0]);\n}\n\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\n\nfunction last(as) {\n  return lookup(as.length - 1, as);\n}\n\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\n\nfunction tail(as) {\n  return isEmpty(as) ? O.none : O.some(as.slice(1));\n}\n\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\n\nfunction init(as) {\n  var len = as.length;\n  return len === 0 ? O.none : O.some(as.slice(0, len - 1));\n}\n\nexports.init = init;\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction takeLeft(n) {\n  return function (as) {\n    return as.slice(0, n);\n  };\n}\n\nexports.takeLeft = takeLeft;\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\n\nfunction takeRight(n) {\n  return function (as) {\n    return n === 0 ? exports.empty : as.slice(-n);\n  };\n}\n\nexports.takeRight = takeRight;\n\nfunction takeLeftWhile(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var init = Array(i);\n\n    for (var j = 0; j < i; j++) {\n      init[j] = as[j];\n    }\n\n    return init;\n  };\n}\n\nexports.takeLeftWhile = takeLeftWhile;\n\nvar spanIndexUncurry = function spanIndexUncurry(as, predicate) {\n  var l = as.length;\n  var i = 0;\n\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nfunction spanLeft(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var init = Array(i);\n\n    for (var j = 0; j < i; j++) {\n      init[j] = as[j];\n    }\n\n    var l = as.length;\n    var rest = Array(l - i);\n\n    for (var j = i; j < l; j++) {\n      rest[j - i] = as[j];\n    }\n\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n\nexports.spanLeft = spanLeft;\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction dropLeft(n) {\n  return function (as) {\n    return as.slice(n, as.length);\n  };\n}\n\nexports.dropLeft = dropLeft;\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction dropRight(n) {\n  return function (as) {\n    return as.slice(0, as.length - n);\n  };\n}\n\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction dropLeftWhile(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var l = as.length;\n    var rest = Array(l - i);\n\n    for (var j = i; j < l; j++) {\n      rest[j - i] = as[j];\n    }\n\n    return rest;\n  };\n}\n\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\n\nfunction findIndex(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = 0; i < len; i++) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findIndex = findIndex;\n\nfunction findFirst(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = 0; i < len; i++) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\n\nfunction findFirstMap(f) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = 0; i < len; i++) {\n      var v = f(as[i]);\n\n      if (O.isSome(v)) {\n        return v;\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findFirstMap = findFirstMap;\n\nfunction findLast(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = len - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\n\nfunction findLastMap(f) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = len - 1; i >= 0; i--) {\n      var v = f(as[i]);\n\n      if (O.isSome(v)) {\n        return v;\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\n\nfunction findLastIndex(predicate) {\n  return function (as) {\n    var len = as.length;\n\n    for (var i = len - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n\n    return O.none;\n  };\n}\n\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\n\nfunction insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? O.none : O.some(unsafeInsertAt(i, a, as));\n  };\n}\n\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\n\nfunction updateAt(i, a) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, a, as));\n  };\n}\n\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\n\nfunction deleteAt(i) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeDeleteAt(i, as));\n  };\n}\n\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\n\nfunction modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n}\n\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction reverse(as) {\n  if (isEmpty(as)) {\n    return as;\n  }\n\n  return as.slice().reverse();\n}\n\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction rights(as) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  var len = as.length;\n\n  for (var i = 0; i < len; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n\n  return r;\n}\n\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\n\nfunction lefts(as) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  var len = as.length;\n\n  for (var i = 0; i < len; i++) {\n    var a = as[i];\n\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n\n  return r;\n}\n\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar sort = function sort(O) {\n  return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n  };\n};\n\nexports.sort = sort; // TODO: curry and make data-last in v3\n\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction zipWith(fa, fb, f) {\n  // tslint:disable-next-line: readonly-array\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n\n  return fc;\n}\n\nexports.zipWith = zipWith;\n\nfunction zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\n\nfunction unzip(as) {\n  // tslint:disable-next-line: readonly-array\n  var fa = []; // tslint:disable-next-line: readonly-array\n\n  var fb = [];\n\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n\n  return [fa, fb];\n}\n\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nvar prependToAll = function prependToAll(e) {\n  return function (xs) {\n    // tslint:disable-next-line: readonly-array\n    var ys = [];\n\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n      var x = xs_1[_i];\n      ys.push(e, x);\n    }\n\n    return ys;\n  };\n};\n\nexports.prependToAll = prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\n\nfunction intersperse(e) {\n  return function (as) {\n    var length = as.length;\n\n    if (length === 0) {\n      return as;\n    }\n\n    return cons(as[0], exports.prependToAll(e)(as.slice(1, as.length)));\n  };\n}\n\nexports.intersperse = intersperse;\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction rotate(n) {\n  return function (as) {\n    var len = as.length;\n\n    if (n === 0 || len <= 1 || len === Math.abs(n)) {\n      return as;\n    } else if (n < 0) {\n      return rotate(len + n)(as);\n    } else {\n      return as.slice(-n).concat(as.slice(0, len - n));\n    }\n  };\n}\n\nexports.rotate = rotate;\n\nfunction elem(E) {\n  return function (a, as) {\n    if (as === undefined) {\n      var elemE_1 = elem(E);\n      return function (as) {\n        return elemE_1(a, as);\n      };\n    }\n\n    var predicate = function predicate(element) {\n      return E.equals(element, a);\n    };\n\n    var i = 0;\n    var len = as.length;\n\n    for (; i < len; i++) {\n      if (predicate(as[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n}\n\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction uniq(E) {\n  var elemS = elem(E);\n  return function (as) {\n    var len = as.length;\n\n    if (len <= 1) {\n      return as;\n    } // tslint:disable-next-line: readonly-array\n\n\n    var r = [];\n    var i = 0;\n\n    for (; i < len; i++) {\n      var a = as[i];\n\n      if (!elemS(a, r)) {\n        r.push(a);\n      }\n    }\n\n    return len === r.length ? as : r;\n  };\n}\n\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nfunction sortBy(ords) {\n  var M = Ord_1.getMonoid();\n  return exports.sort(ords.reduce(M.concat, M.empty));\n}\n\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar chop = function chop(f) {\n  return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n\n    while (isNonEmpty(cs)) {\n      var _a = f(cs),\n          b = _a[0],\n          c = _a[1];\n\n      result.push(b);\n      cs = c;\n    }\n\n    return result;\n  };\n};\n\nexports.chop = chop;\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\n\nfunction splitAt(n) {\n  return function (as) {\n    return [as.slice(0, n), as.slice(n)];\n  };\n}\n\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\n\nfunction chunksOf(n) {\n  var f = exports.chop(splitAt(n));\n  return function (as) {\n    return as.length === 0 ? exports.empty : isOutOfBound(n - 1, as) ? [as] : f(as);\n  };\n}\n\nexports.chunksOf = chunksOf;\n\nfunction comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function g() {\n      return true;\n    };\n  }\n\n  var go = function go(scope, input) {\n    if (input.length === 0) {\n      return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : exports.empty;\n    } else {\n      return chain_(input[0], function (x) {\n        return go(snoc(scope, x), input.slice(1));\n      });\n    }\n  };\n\n  return go(exports.empty, input);\n}\n\nexports.comprehension = comprehension;\n\nfunction union(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var unionE_1 = union(E);\n      return function (ys) {\n        return unionE_1(ys, xs);\n      };\n    }\n\n    return concat(xs, ys.filter(function (a) {\n      return !elemE(a, xs);\n    }));\n  };\n}\n\nexports.union = union;\n\nfunction intersection(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\n\nexports.intersection = intersection;\n\nfunction difference(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n}\n\nexports.difference = difference;\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\n\nvar of = function of(a) {\n  return [a];\n};\n\nexports.of = of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\n\nvar zero = function zero() {\n  return exports.empty;\n};\n\nexports.zero = zero; // -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n\nvar map_ = function map_(fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\n\nvar mapWithIndex_ = function mapWithIndex_(fa, f) {\n  return function_1.pipe(fa, exports.mapWithIndex(f));\n};\n\nvar ap_ = function ap_(fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\n\nvar chain_ = function chain_(ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\n\nvar filter_ = function filter_(fa, predicate) {\n  return function_1.pipe(fa, exports.filter(predicate));\n};\n\nvar filterMap_ = function filterMap_(fa, f) {\n  return function_1.pipe(fa, exports.filterMap(f));\n};\n\nvar partitionWithIndex_ = function partitionWithIndex_(fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex));\n};\n\nvar partition_ = function partition_(fa, predicate) {\n  return function_1.pipe(fa, exports.partition(predicate));\n};\n\nvar partitionMap_ = function partitionMap_(fa, f) {\n  return function_1.pipe(fa, exports.partitionMap(f));\n};\n\nvar partitionMapWithIndex_ = function partitionMapWithIndex_(fa, f) {\n  return function_1.pipe(fa, exports.partitionMapWithIndex(f));\n};\n\nvar alt_ = function alt_(fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\n\nvar reduce_ = function reduce_(fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\n\nvar foldMap_ = function foldMap_(M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\n\nvar reduceRight_ = function reduceRight_(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\n\nvar reduceWithIndex_ = function reduceWithIndex_(fa, b, f) {\n  var l = fa.length;\n  var r = b;\n\n  for (var i = 0; i < l; i++) {\n    r = f(i, r, fa[i]);\n  }\n\n  return r;\n};\n\nvar foldMapWithIndex_ = function foldMapWithIndex_(M) {\n  return function (fa, f) {\n    return fa.reduce(function (b, a, i) {\n      return M.concat(b, f(i, a));\n    }, M.empty);\n  };\n};\n\nvar reduceRightWithIndex_ = function reduceRightWithIndex_(fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n\nvar filterMapWithIndex_ = function filterMapWithIndex_(fa, f) {\n  return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\n\nvar filterWithIndex_ = function filterWithIndex_(fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex));\n};\n\nvar extend_ = function extend_(fa, f) {\n  return function_1.pipe(fa, exports.extend(f));\n};\n\nvar traverse_ = function traverse_(F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar traverseWithIndex_ = function traverseWithIndex_(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseWithIndexF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar wither_ = function wither_(F) {\n  var witherF = exports.wither(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, witherF(f));\n  };\n};\n/* istanbul ignore next */\n\n\nvar wilt_ = function wilt_(F) {\n  var wiltF = exports.wilt(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, wiltF(f));\n  };\n}; // -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\n\n\nvar altW = function altW(that) {\n  return function (fa) {\n    return concat(fa, that());\n  };\n};\n\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\n\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\n\nvar ap = function ap(fa) {\n  return exports.chain(function (f) {\n    return function_1.pipe(fa, exports.map(f));\n  });\n};\n\nexports.ap = ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar apFirst = function apFirst(fb) {\n  return function_1.flow(exports.map(function (a) {\n    return function () {\n      return a;\n    };\n  }), exports.ap(fb));\n};\n\nexports.apFirst = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar apSecond = function apSecond(fb) {\n  return function_1.flow(exports.map(function () {\n    return function (b) {\n      return b;\n    };\n  }), exports.ap(fb));\n};\n\nexports.apSecond = apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\n\nvar chain = function chain(f) {\n  return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n\nexports.chain = chain;\n/**\n * @since 2.7.0\n */\n\nvar chainWithIndex = function chainWithIndex(f) {\n  return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n\n    for (var i = 0; i < l; i++) {\n      var e = ma[i];\n      var arr = f(i, e);\n      outLen += arr.length;\n      temp[i] = arr;\n    }\n\n    var out = Array(outLen);\n    var start = 0;\n\n    for (var i = 0; i < l; i++) {\n      var arr = temp[i];\n      var l_1 = arr.length;\n\n      for (var j = 0; j < l_1; j++) {\n        out[j + start] = arr[j];\n      }\n\n      start += l_1;\n    }\n\n    return out;\n  };\n};\n\nexports.chainWithIndex = chainWithIndex;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nvar chainFirst = function chainFirst(f) {\n  return exports.chain(function (a) {\n    return function_1.pipe(f(a), exports.map(function () {\n      return a;\n    }));\n  });\n};\n\nexports.chainFirst = chainFirst;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\n\nvar map = function map(f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\n\nvar mapWithIndex = function mapWithIndex(f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nvar separate = function separate(fa) {\n  // tslint:disable-next-line: readonly-array\n  var left = []; // tslint:disable-next-line: readonly-array\n\n  var right = [];\n\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n};\n\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar filter = function filter(predicate) {\n  return function (fa) {\n    return fa.filter(predicate);\n  };\n};\n\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar filterMapWithIndex = function filterMapWithIndex(f) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n\n      if (O.isSome(optionB)) {\n        result.push(optionB.value);\n      }\n    }\n\n    return result;\n  };\n};\n\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar filterMap = function filterMap(f) {\n  return exports.filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\n\nexports.compact = /*#__PURE__*/exports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar partition = function partition(predicate) {\n  return exports.partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar partitionWithIndex = function partitionWithIndex(predicateWithIndex) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = []; // tslint:disable-next-line: readonly-array\n\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var a = fa[i];\n\n      if (predicateWithIndex(i, a)) {\n        right.push(a);\n      } else {\n        left.push(a);\n      }\n    }\n\n    return {\n      left: left,\n      right: right\n    };\n  };\n};\n\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\n\nvar partitionMap = function partitionMap(f) {\n  return exports.partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar partitionMapWithIndex = function partitionMapWithIndex(f) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = []; // tslint:disable-next-line: readonly-array\n\n    var right = [];\n\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n\n    return {\n      left: left,\n      right: right\n    };\n  };\n};\n\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\n\nvar filterWithIndex = function filterWithIndex(predicateWithIndex) {\n  return function (fa) {\n    return fa.filter(function (a, i) {\n      return predicateWithIndex(i, a);\n    });\n  };\n};\n\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\n\nvar extend = function extend(f) {\n  return function (wa) {\n    return wa.map(function (_, i, as) {\n      return f(as.slice(i));\n    });\n  };\n};\n\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\n\nexports.duplicate = /*#__PURE__*/exports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar foldMapWithIndex = function foldMapWithIndex(M) {\n  var foldMapWithIndexM = foldMapWithIndex_(M);\n  return function (f) {\n    return function (fa) {\n      return foldMapWithIndexM(fa, f);\n    };\n  };\n};\n\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar reduce = function reduce(b, f) {\n  return exports.reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar foldMap = function foldMap(M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (f) {\n    return foldMapWithIndexM(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar reduceWithIndex = function reduceWithIndex(b, f) {\n  return function (fa) {\n    return reduceWithIndex_(fa, b, f);\n  };\n};\n\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\n\nvar reduceRight = function reduceRight(b, f) {\n  return exports.reduceRightWithIndex(b, function (_, a, b) {\n    return f(a, b);\n  });\n};\n\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\n\nvar reduceRightWithIndex = function reduceRightWithIndex(b, f) {\n  return function (fa) {\n    return fa.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar traverse = function traverse(F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n\nexports.traverse = traverse;\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\n\nvar sequence = function sequence(F) {\n  return function (ta) {\n    return reduce_(ta, F.of(exports.zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return snoc(as, a);\n        };\n      }), fa);\n    });\n  };\n};\n\nexports.sequence = sequence;\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\n\nvar traverseWithIndex = function traverseWithIndex(F) {\n  return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return snoc(bs, b);\n        };\n      }), f(i, a));\n    });\n  };\n};\n\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wither = function wither(F) {\n  var traverseF = exports.traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(function_1.pipe(fa, traverseF(f)), exports.compact);\n    };\n  };\n};\n\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\n\nvar wilt = function wilt(F) {\n  var traverseF = exports.traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(function_1.pipe(fa, traverseF(f)), exports.separate);\n    };\n  };\n};\n\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\n\nvar unfold = function unfold(b, f) {\n  // tslint:disable-next-line: readonly-array\n  var ret = [];\n  var bb = b;\n\n  while (true) {\n    var mt = f(bb);\n\n    if (O.isSome(mt)) {\n      var _a = mt.value,\n          a = _a[0],\n          b_1 = _a[1];\n      ret.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n};\n\nexports.unfold = unfold; // -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Functor = {\n  URI: exports.URI,\n  map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FunctorWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Applicative = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Monad = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Unfoldable = {\n  URI: exports.URI,\n  unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alt = {\n  URI: exports.URI,\n  map: map_,\n  alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Alternative = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  alt: alt_,\n  zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Extend = {\n  URI: exports.URI,\n  map: map_,\n  extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Filterable = {\n  URI: exports.URI,\n  map: map_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FilterableWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.FoldableWithIndex = {\n  URI: exports.URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Traversable = {\n  URI: exports.URI,\n  map: map_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.TraversableWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\n\nexports.Witherable = {\n  URI: exports.URI,\n  map: map_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  wither: wither_,\n  wilt: wilt_\n}; // TODO: remove in v3\n\n/**\n * @category instances\n * @since 2.5.0\n */\n\nexports.readonlyArray = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  chain: chain_,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  mapWithIndex: mapWithIndex_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_,\n  alt: alt_,\n  zero: exports.zero,\n  unfold: exports.unfold,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverseWithIndex: traverseWithIndex_,\n  extend: extend_,\n  wither: wither_,\n  wilt: wilt_\n}; // -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nfunction unsafeInsertAt(i, a, as) {\n  var xs = as.slice();\n  xs.splice(i, 0, a);\n  return xs;\n}\n\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nfunction unsafeUpdateAt(i, a, as) {\n  if (as[i] === a) {\n    return as;\n  } else {\n    var xs = as.slice();\n    xs[i] = a;\n    return xs;\n  }\n}\n\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\n\nfunction unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n}\n\nexports.unsafeDeleteAt = unsafeDeleteAt; // -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n\n/**\n * An empty array\n *\n * @since 2.5.0\n */\n\nexports.empty = [];\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nvar every = function every(predicate) {\n  return function (as) {\n    return as.every(predicate);\n  };\n};\n\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\n\nvar some = function some(predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\n\nexports.some = some; // -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.9.0\n */\n\nexports.Do = /*#__PURE__*/exports.of({});\n/**\n * @since 2.8.0\n */\n\nvar bindTo = function bindTo(name) {\n  return exports.map(function_1.bindTo_(name));\n};\n\nexports.bindTo = bindTo;\n/**\n * @since 2.8.0\n */\n\nvar bind = function bind(name, f) {\n  return exports.chain(function (a) {\n    return function_1.pipe(f(a), exports.map(function (b) {\n      return function_1.bind_(a, name, b);\n    }));\n  });\n};\n\nexports.bind = bind; // -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n\n/**\n * @since 2.8.0\n */\n\nvar apS = function apS(name, fb) {\n  return function_1.flow(exports.map(function (a) {\n    return function (b) {\n      return function_1.bind_(a, name, b);\n    };\n  }), exports.ap(fb));\n};\n\nexports.apS = apS;"],"sourceRoot":""}